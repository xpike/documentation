### YamlMime:ManagedReference
items:
- uid: XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver
  commentId: T:XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver
  id: MicrosoftDependencyResolver
  parent: XPike.Extensions.DependencyInjection.WebApi
  children:
  - XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver.#ctor(System.IServiceProvider)
  - XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver.BeginScope
  - XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver.Dispose
  - XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver.GetService(System.Type)
  - XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver.GetServices(System.Type)
  langs:
  - csharp
  - vb
  name: MicrosoftDependencyResolver
  nameWithType: MicrosoftDependencyResolver
  fullName: XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver
  type: Class
  source:
    remote:
      path: src/XPike.Extensions.DependencyInjection.WebApi/MicrosoftDependencyResolver.cs
      branch: master
      repo: https://xpike@dev.azure.com/xpike/xpike/_git/xpike-extensions
    id: MicrosoftDependencyResolver
    path: ../src/XPike.Extensions.DependencyInjection.WebApi/MicrosoftDependencyResolver.cs
    startLine: 12
  assemblies:
  - XPike.Extensions.DependencyInjection.WebApi
  namespace: XPike.Extensions.DependencyInjection.WebApi
  summary: "\nClass MicrosoftDependencyResolver. This class cannot be inherited.\nImplements the <xref href=\"System.Web.Http.Dependencies.IDependencyResolver\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: 'public sealed class MicrosoftDependencyResolver : IDependencyResolver, IDependencyScope, IDisposable'
    content.vb: >-
      Public NotInheritable Class MicrosoftDependencyResolver

          Implements IDependencyResolver, IDependencyScope, IDisposable
  seealso:
  - linkId: System.Web.Http.Dependencies.IDependencyResolver
    commentId: T:System.Web.Http.Dependencies.IDependencyResolver
  inheritance:
  - System.Object
  implements:
  - System.Web.Http.Dependencies.IDependencyResolver
  - System.Web.Http.Dependencies.IDependencyScope
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver.#ctor(System.IServiceProvider)
  commentId: M:XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver.#ctor(System.IServiceProvider)
  id: '#ctor(System.IServiceProvider)'
  parent: XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver
  langs:
  - csharp
  - vb
  name: MicrosoftDependencyResolver(IServiceProvider)
  nameWithType: MicrosoftDependencyResolver.MicrosoftDependencyResolver(IServiceProvider)
  fullName: XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver.MicrosoftDependencyResolver(System.IServiceProvider)
  type: Constructor
  source:
    remote:
      path: src/XPike.Extensions.DependencyInjection.WebApi/MicrosoftDependencyResolver.cs
      branch: master
      repo: https://xpike@dev.azure.com/xpike/xpike/_git/xpike-extensions
    id: .ctor
    path: ../src/XPike.Extensions.DependencyInjection.WebApi/MicrosoftDependencyResolver.cs
    startLine: 20
  assemblies:
  - XPike.Extensions.DependencyInjection.WebApi
  namespace: XPike.Extensions.DependencyInjection.WebApi
  summary: "\nInitializes a new instance of the <xref href=\"XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public MicrosoftDependencyResolver(IServiceProvider serviceProvider)
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: The service provider.
    content.vb: Public Sub New(serviceProvider As IServiceProvider)
  overload: XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver.BeginScope
  commentId: M:XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver.BeginScope
  id: BeginScope
  parent: XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver
  langs:
  - csharp
  - vb
  name: BeginScope()
  nameWithType: MicrosoftDependencyResolver.BeginScope()
  fullName: XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver.BeginScope()
  type: Method
  source:
    remote:
      path: src/XPike.Extensions.DependencyInjection.WebApi/MicrosoftDependencyResolver.cs
      branch: master
      repo: https://xpike@dev.azure.com/xpike/xpike/_git/xpike-extensions
    id: BeginScope
    path: ../src/XPike.Extensions.DependencyInjection.WebApi/MicrosoftDependencyResolver.cs
    startLine: 29
  assemblies:
  - XPike.Extensions.DependencyInjection.WebApi
  namespace: XPike.Extensions.DependencyInjection.WebApi
  summary: "\nStarts a resolution scope.\n"
  example: []
  syntax:
    content: public IDependencyScope BeginScope()
    return:
      type: System.Web.Http.Dependencies.IDependencyScope
      description: The dependency scope.
    content.vb: Public Function BeginScope As IDependencyScope
  overload: XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver.BeginScope*
  implements:
  - System.Web.Http.Dependencies.IDependencyResolver.BeginScope
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver.Dispose
  commentId: M:XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver.Dispose
  id: Dispose
  parent: XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: MicrosoftDependencyResolver.Dispose()
  fullName: XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver.Dispose()
  type: Method
  source:
    remote:
      path: src/XPike.Extensions.DependencyInjection.WebApi/MicrosoftDependencyResolver.cs
      branch: master
      repo: https://xpike@dev.azure.com/xpike/xpike/_git/xpike-extensions
    id: Dispose
    path: ../src/XPike.Extensions.DependencyInjection.WebApi/MicrosoftDependencyResolver.cs
    startLine: 39
  assemblies:
  - XPike.Extensions.DependencyInjection.WebApi
  namespace: XPike.Extensions.DependencyInjection.WebApi
  summary: "\nPerforms application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver.GetService(System.Type)
  commentId: M:XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver.GetService(System.Type)
  id: GetService(System.Type)
  parent: XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver
  langs:
  - csharp
  - vb
  name: GetService(Type)
  nameWithType: MicrosoftDependencyResolver.GetService(Type)
  fullName: XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver.GetService(System.Type)
  type: Method
  source:
    remote:
      path: src/XPike.Extensions.DependencyInjection.WebApi/MicrosoftDependencyResolver.cs
      branch: master
      repo: https://xpike@dev.azure.com/xpike/xpike/_git/xpike-extensions
    id: GetService
    path: ../src/XPike.Extensions.DependencyInjection.WebApi/MicrosoftDependencyResolver.cs
    startLine: 49
  assemblies:
  - XPike.Extensions.DependencyInjection.WebApi
  namespace: XPike.Extensions.DependencyInjection.WebApi
  summary: "\nRetrieves a service from the scope.\n"
  example: []
  syntax:
    content: public object GetService(Type serviceType)
    parameters:
    - id: serviceType
      type: System.Type
      description: The service to be retrieved.
    return:
      type: System.Object
      description: The retrieved service.
    content.vb: Public Function GetService(serviceType As Type) As Object
  overload: XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver.GetService*
  implements:
  - System.Web.Http.Dependencies.IDependencyScope.GetService(System.Type)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver.GetServices(System.Type)
  commentId: M:XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver.GetServices(System.Type)
  id: GetServices(System.Type)
  parent: XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver
  langs:
  - csharp
  - vb
  name: GetServices(Type)
  nameWithType: MicrosoftDependencyResolver.GetServices(Type)
  fullName: XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver.GetServices(System.Type)
  type: Method
  source:
    remote:
      path: src/XPike.Extensions.DependencyInjection.WebApi/MicrosoftDependencyResolver.cs
      branch: master
      repo: https://xpike@dev.azure.com/xpike/xpike/_git/xpike-extensions
    id: GetServices
    path: ../src/XPike.Extensions.DependencyInjection.WebApi/MicrosoftDependencyResolver.cs
    startLine: 59
  assemblies:
  - XPike.Extensions.DependencyInjection.WebApi
  namespace: XPike.Extensions.DependencyInjection.WebApi
  summary: "\nRetrieves a collection of services from the scope.\n"
  example: []
  syntax:
    content: public IEnumerable<object> GetServices(Type serviceType)
    parameters:
    - id: serviceType
      type: System.Type
      description: The collection of services to be retrieved.
    return:
      type: System.Collections.Generic.IEnumerable{System.Object}
      description: The retrieved collection of services.
    content.vb: Public Function GetServices(serviceType As Type) As IEnumerable(Of Object)
  overload: XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver.GetServices*
  implements:
  - System.Web.Http.Dependencies.IDependencyScope.GetServices(System.Type)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Web.Http.Dependencies.IDependencyResolver
  commentId: T:System.Web.Http.Dependencies.IDependencyResolver
  parent: System.Web.Http.Dependencies
  isExternal: true
  name: IDependencyResolver
  nameWithType: IDependencyResolver
  fullName: System.Web.Http.Dependencies.IDependencyResolver
- uid: XPike.Extensions.DependencyInjection.WebApi
  commentId: N:XPike.Extensions.DependencyInjection.WebApi
  name: XPike.Extensions.DependencyInjection.WebApi
  nameWithType: XPike.Extensions.DependencyInjection.WebApi
  fullName: XPike.Extensions.DependencyInjection.WebApi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Http.Dependencies.IDependencyScope
  commentId: T:System.Web.Http.Dependencies.IDependencyScope
  parent: System.Web.Http.Dependencies
  isExternal: true
  name: IDependencyScope
  nameWithType: IDependencyScope
  fullName: System.Web.Http.Dependencies.IDependencyScope
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Web.Http.Dependencies
  commentId: N:System.Web.Http.Dependencies
  isExternal: true
  name: System.Web.Http.Dependencies
  nameWithType: System.Web.Http.Dependencies
  fullName: System.Web.Http.Dependencies
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver
  commentId: T:XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver
  name: MicrosoftDependencyResolver
  nameWithType: MicrosoftDependencyResolver
  fullName: XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver
- uid: XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver.#ctor*
  commentId: Overload:XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver.#ctor
  name: MicrosoftDependencyResolver
  nameWithType: MicrosoftDependencyResolver.MicrosoftDependencyResolver
  fullName: XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver.MicrosoftDependencyResolver
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver.BeginScope*
  commentId: Overload:XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver.BeginScope
  name: BeginScope
  nameWithType: MicrosoftDependencyResolver.BeginScope
  fullName: XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver.BeginScope
- uid: System.Web.Http.Dependencies.IDependencyResolver.BeginScope
  commentId: M:System.Web.Http.Dependencies.IDependencyResolver.BeginScope
  parent: System.Web.Http.Dependencies.IDependencyResolver
  isExternal: true
  name: BeginScope()
  nameWithType: IDependencyResolver.BeginScope()
  fullName: System.Web.Http.Dependencies.IDependencyResolver.BeginScope()
  spec.csharp:
  - uid: System.Web.Http.Dependencies.IDependencyResolver.BeginScope
    name: BeginScope
    nameWithType: IDependencyResolver.BeginScope
    fullName: System.Web.Http.Dependencies.IDependencyResolver.BeginScope
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.Dependencies.IDependencyResolver.BeginScope
    name: BeginScope
    nameWithType: IDependencyResolver.BeginScope
    fullName: System.Web.Http.Dependencies.IDependencyResolver.BeginScope
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver.Dispose*
  commentId: Overload:XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver.Dispose
  name: Dispose
  nameWithType: MicrosoftDependencyResolver.Dispose
  fullName: XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver.GetService*
  commentId: Overload:XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver.GetService
  name: GetService
  nameWithType: MicrosoftDependencyResolver.GetService
  fullName: XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver.GetService
- uid: System.Web.Http.Dependencies.IDependencyScope.GetService(System.Type)
  commentId: M:System.Web.Http.Dependencies.IDependencyScope.GetService(System.Type)
  parent: System.Web.Http.Dependencies.IDependencyScope
  isExternal: true
  name: GetService(Type)
  nameWithType: IDependencyScope.GetService(Type)
  fullName: System.Web.Http.Dependencies.IDependencyScope.GetService(System.Type)
  spec.csharp:
  - uid: System.Web.Http.Dependencies.IDependencyScope.GetService(System.Type)
    name: GetService
    nameWithType: IDependencyScope.GetService
    fullName: System.Web.Http.Dependencies.IDependencyScope.GetService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.Dependencies.IDependencyScope.GetService(System.Type)
    name: GetService
    nameWithType: IDependencyScope.GetService
    fullName: System.Web.Http.Dependencies.IDependencyScope.GetService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver.GetServices*
  commentId: Overload:XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver.GetServices
  name: GetServices
  nameWithType: MicrosoftDependencyResolver.GetServices
  fullName: XPike.Extensions.DependencyInjection.WebApi.MicrosoftDependencyResolver.GetServices
- uid: System.Web.Http.Dependencies.IDependencyScope.GetServices(System.Type)
  commentId: M:System.Web.Http.Dependencies.IDependencyScope.GetServices(System.Type)
  parent: System.Web.Http.Dependencies.IDependencyScope
  isExternal: true
  name: GetServices(Type)
  nameWithType: IDependencyScope.GetServices(Type)
  fullName: System.Web.Http.Dependencies.IDependencyScope.GetServices(System.Type)
  spec.csharp:
  - uid: System.Web.Http.Dependencies.IDependencyScope.GetServices(System.Type)
    name: GetServices
    nameWithType: IDependencyScope.GetServices
    fullName: System.Web.Http.Dependencies.IDependencyScope.GetServices
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Web.Http.Dependencies.IDependencyScope.GetServices(System.Type)
    name: GetServices
    nameWithType: IDependencyScope.GetServices
    fullName: System.Web.Http.Dependencies.IDependencyScope.GetServices
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Object}
  commentId: T:System.Collections.Generic.IEnumerable{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Object>
  nameWithType: IEnumerable<Object>
  fullName: System.Collections.Generic.IEnumerable<System.Object>
  nameWithType.vb: IEnumerable(Of Object)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Object)
  name.vb: IEnumerable(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
